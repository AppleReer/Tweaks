Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:09 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:09 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:09 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client '/System/Library/PrivateFrameworks/HomeKitDaemon.framework'
Feb 20 12:42:10 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:10 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:10 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:11 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:11 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:11 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:12 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client '/System/Library/LocationBundles/MagicalMoments.bundle'
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:12 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:12 Andrews-iPhone locationd[346] <Notice>: Incrementing METs -- mets:<private> metsFromGrade:<private>
Feb 20 12:42:12 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:13 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:13 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:13 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:13 Andrews-iPhone SpringBoard(Search)[6692] <Info>: cancelCurrentQuery
Feb 20 12:42:13 Andrews-iPhone SpringBoard(Search)[6692] <Info>: for prefs: 0, internet domains available: 1, internet domains enabled: 1
Feb 20 12:42:13 Andrews-iPhone SpringBoard(Search)[6692] <Info>: for prefs: 0, internet domains available: 1, internet domains enabled: 1
Feb 20 12:42:13 Andrews-iPhone SpringBoard[6692] <Notice>: Enabling global orientation lock override for reason: SBLockOrientationForSpotlight, new orientation: 0, forced NO
Feb 20 12:42:13 Andrews-iPhone SpringBoard[6692] <Notice>: SB orientation locked: YES; user lock: NO, overrides: {(
    SBLockOrientationForSpotlight
)}
Feb 20 12:42:13 Andrews-iPhone backboardd[6690] <Info>: client com.apple.springboard - (6692) updated deferrals to {(
    <BKSEventFocusDeferral: 0x100414190; <BKSEventFocusDeferralProperties: 0x1004bd4a0; <com.apple.springboard - 6692, (null), 0x0> --> <BKSEventFocusDeferralProperties: 0x100498ad0; <com.apple.springboard - 6692, (null), 0x78310126>; Priority: 0,
    <BKSEventFocusDeferral: 0x1004f85a0; <BKSEventFocusDeferralProperties: 0x1004da480; <com.apple.springboard - 6692, (null), 0x78310126> --> <BKSEventFocusDeferralProperties: 0x1004992f0; <com.apple.springboard - 6692, (null), 0x4a2b3d5f>; Priority: 10
)}
Feb 20 12:42:13 Andrews-iPhone backboardd[6690] <Notice>: Locking device orientation for lock type: 2 to: portrait
Feb 20 12:42:13 Andrews-iPhone backboardd[6690] <Notice>: Effective device orientation changed to: portrait
Feb 20 12:42:13 Andrews-iPhone SpringBoard[6692] <Notice>: SB orientation lock change handler fired! is locked: YES; performed update: YES
Feb 20 12:42:13 Andrews-iPhone coreduetd[5766] <Info>: Got new incoming XPC connection...
Feb 20 12:42:13 Andrews-iPhone coreduetd[5766] <Info>: client_has_coreduetd_allow: xpc_dictionary_get_bool() returned YES
Feb 20 12:42:13 Andrews-iPhone coreduetd[5766] <Info>: Incoming using send_message_with_reply
Feb 20 12:42:13 Andrews-iPhone coreduetd[5766] <Info>: Received [CDDProtocolMessageTypeTForecastQuery] message, msgtype = [8], from clientId [25]...
Feb 20 12:42:13 Andrews-iPhone coreduetd[5766] <Info>: Received [CDDProtocolMessageTypeTForecastQuery] with parameters
	attributeId             = [12314]
	stringValue             = []
	integerValue            = [0]
	floatValue              = [0.000000]
	hasValue                = [0]
	format                  = [2]
	startEpochSeconds       = [508095733]
	endEpochSeconds         = [509305333]
	recurrenceDeltaSeconds  = [0]
	recurrenceWidthSeconds  = [0]
	temporalLeeway          = [0.000000]
	device                  = [0]
	limitCount              = [18446744073709551615]
	clientId                = [25]
Feb 20 12:42:13 Andrews-iPhone SpringBoard(SpotlightUI)[6692] <Info>: handleOptionsForNewSections: <private>
Feb 20 12:42:13 Andrews-iPhone SpringBoard(Search)[6692] <Info>: handleOptionsForNewSections: <private>
Feb 20 12:42:13 Andrews-iPhone SpringBoard(Search)[6692] <Info>: Merge sections <private>
Feb 20 12:42:13 Andrews-iPhone SpringBoard(Search)[6692] <Info>: Post updates
Feb 20 12:42:13 Andrews-iPhone SpringBoard(SpotlightUI)[6692] <Info>: searchAgentUpdatedResults
Feb 20 12:42:13 Andrews-iPhone SpringBoard(SpotlightUI)[6692] <Info>: Do nothing with status
Feb 20 12:42:13 Andrews-iPhone searchd(Search)[677] <Info>: for prefs: 0, internet domains available: 1, internet domains enabled: 1
Feb 20 12:42:14 Andrews-iPhone SpringBoard(libsystem_trace.dylib)[6692] <Notice>: subsystem: com.apple.UIKit, category: LayoutConstraints, enable_level: 0, persist_level: 0, default_ttl: 0, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 1, privacy_setting: 2, enable_private_data: 0
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
(
    "<NSLayoutConstraint:0x17028f5f0 SearchUIAppIconButton:0x121d777e0.width == 60   (active)>",
    "<NSLayoutConstraint:0x170286f90 SearchUIAppIconButton:0x121d777e0.centerX == SearchUIIconView:0x123a06a20.centerX   (active)>",
    "<NSLayoutConstraint:0x174696440 SearchUIAppIconButton:0x123b012b0.centerX == SearchUIIconView:0x1271eda50.centerX   (active)>",
    "<NSLayoutConstraint:0x174688110 SearchUIAppIconButton:0x123b01f50.width == 60   (active)>",
    "<NSLayoutConstraint:0x1746896f0 SearchUIAppIconButton:0x123b01f50.centerX == SearchUIIconView:0x123b01d80.centerX   (active)>",
    "<NSLayoutConstraint:0x174691d00 UILayoutGuide:0x17419c150''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x174682490 H:[SearchUIAppIconButton:0x121d777e0]-(0)-[UILayoutGuide:0x17419c150'']   (active)>",
    "<NSLayoutConstraint:0x17468f000 SearchUIIconView:0x123a06a20.width == SearchUIIconView:0x1271eda50.width   (active)>",
    "<NSLayoutConstraint:0x17468e880 H:[SearchUIIconView:0x123a06a20]-(1)-[SearchUIIconView:0x1271eda50]   (active)>",
    "<NSLayoutConstraint:0x17468bc20 H:[UILayoutGuide:0x17419c150'']-(0)-[SearchUIAppIconButton:0x123b012b0]   (active)>",
    "<NSLayoutConstraint:0x17049bb20 UILayoutGuide:0x170196c00''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x17049f950 H:[SearchUIAppIconButton:0x123b012b0]-(0)-[UILayoutGuide:0x170196c00'']   (active)>",
    "<NSLayoutConstraint:0x17049f810 SearchUIIconView:0x1271eda50.width == SearchUIIconView:0x123b01d80.width   (active)>",
    "<NSLayoutConstraint:0x170484650 H:[SearchUIIconView:0x1271eda50]-(1)-[SearchUIIconView:0x123b01d80]   (active)>",
    "<NSLayoutConstraint:0x17029f400 H:[UILayoutGuide:0x170196c00'']-(0)-[SearchUIAppIconButton:0x123b01f50]   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x174688110 SearchUIAppIconButton:0x123b01f50.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17028f5f0 SearchUIAppIconButton:0x121d777e0.width == 60   (active)>",
    "<NSLayoutConstraint:0x170286f90 SearchUIAppIconButton:0x121d777e0.centerX == SearchUIIconView:0x123a06a20.centerX   (active)>",
    "<NSLayoutConstraint:0x17449c070 SearchUIAppIconButton:0x123b012b0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696440 SearchUIAppIconButton:0x123b012b0.centerX == SearchUIIconView:0x1271eda50.centerX   (active)>",
    "<NSLayoutConstraint:0x170688750 SearchUIAppIconButton:0x123a06e80.width == 60   (active)>",
    "<NSLayoutConstraint:0x170688a70 SearchUIAppIconButton:0x123a06e80.centerX == SearchUIIconView:0x123a06820.centerX   (active)>",
    "<NSLayoutConstraint:0x17028c300 SearchUIAppIconButton:0x123a07a70.width == 60   (active)>",
    "<NSLayoutConstraint:0x1702872b0 SearchUIAppIconButton:0x123a07a70.centerX == SearchUIIconView:0x123a078a0.centerX   (active)>",
    "<NSLayoutConstraint:0x174691d00 UILayoutGuide:0x17419c150''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x174682490 H:[SearchUIAppIconButton:0x121d777e0]-(0)-[UILayoutGuide:0x17419c150'']   (active)>",
    "<NSLayoutConstraint:0x17468f000 SearchUIIconView:0x123a06a20.width == SearchUIIconView:0x1271eda50.width   (active)>",
    "<NSLayoutConstraint:0x17468e880 H:[SearchUIIconView:0x123a06a20]-(1)-[SearchUIIconView:0x1271eda50]   (active)>",
    "<NSLayoutConstraint:0x17468bc20 H:[UILayoutGuide:0x17419c150'']-(0)-[SearchUIAppIconButton:0x123b012b0]   (active)>",
    "<NSLayoutConstraint:0x17049f810 SearchUIIconView:0x1271eda50.width == SearchUIIconView:0x123b01d80.width   (active)>",
    "<NSLayoutConstraint:0x170284e70 SearchUIIconView:0x123b01d80.width == SearchUIIconView:0x123a06820.width   (active)>",
    "<NSLayoutConstraint:0x17028d250 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x174689740 H:[SearchUIAppIconButton:0x123a06e80]-(0)-[UILayoutGuide:0x170199300'']   (active)>",
    "<NSLayoutConstraint:0x1746897e0 SearchUIIconView:0x123a06820.width == SearchUIIconView:0x123a078a0.width   (active)>",
    "<NSLayoutConstraint:0x174689ec0 H:[SearchUIIconView:0x123a06820]-(1)-[SearchUIIconView:0x123a078a0]   (active)>",
    "<NSLayoutConstraint:0x17468f960 H:[UILayoutGuide:0x170199300'']-(0)-[SearchUIAppIconButton:0x123a07a70]   (active)>"
)
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x17028c300 SearchUIAppIconButton:0x123a07a70.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17449c070 SearchUIAppIconButton:0x123b012b0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696440 SearchUIAppIconButton:0x123b012b0.centerX == SearchUIIconView:0x1271eda50.centerX   (active)>",
    "<NSLayoutConstraint:0x1746896f0 SearchUIAppIconButton:0x123b01f50.centerX == SearchUIIconView:0x123b01d80.centerX   (active)>",
    "<NSLayoutConstraint:0x170688750 SearchUIAppIconButton:0x123a06e80.width == 60   (active)>",
    "<NSLayoutConstraint:0x170688a70 SearchUIAppIconButton:0x123a06e80.centerX == SearchUIIconView:0x123a06820.centerX   (active)>",
    "<NSLayoutConstraint:0x17049bb20 UILayoutGuide:0x170196c00''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f950 H:[SearchUIAppIconButton:0x123b012b0]-(0)-[UILayoutGuide:0x170196c00'']   (active)>",
    "<NSLayoutConstraint:0x17049f810 SearchUIIconView:0x1271eda50.width == SearchUIIconView:0x123b01d80.width   (active)>",
    "<NSLayoutConstraint:0x170484650 H:[SearchUIIconView:0x1271eda50]-(1)-[SearchUIIconView:0x123b01d80]   (active)>",
    "<NSLayoutConstraint:0x17029f400 H:[UILayoutGuide:0x170196c00'']-(0)-[SearchUIAppIconButton:0x123b01f50]   (active)>",
    "<NSLayoutConstraint:0x170685550 UILayoutGuide:0x1703827d0''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x17049f770 H:[SearchUIAppIconButton:0x123b01f50]-(0)-[UILayoutGuide:0x1703827d0'']   (active)>",
    "<NSLayoutConstraint:0x170284e70 SearchUIIconView:0x123b01d80.width == SearchUIIconView:0x123a06820.width   (active)>",
    "<NSLayoutConstraint:0x170692ed0 H:[SearchUIIconView:0x123b01d80]-(1)-[SearchUIIconView:0x123a06820]   (active)>",
    "<NSLayoutConstraint:0x17028d5c0 H:[UILayoutGuide:0x1703827d0'']-(0)-[SearchUIAppIconButton:0x123a06e80]   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170688750 SearchUIAppIconButton:0x123a06e80.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17449c070 SearchUIAppIconButton:0x123b012b0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696440 SearchUIAppIconButton:0x123b012b0.centerX == SearchUIIconView:0x1271eda50.centerX   (active)>",
    "<NSLayoutConstraint:0x1746896f0 SearchUIAppIconButton:0x123b01f50.centerX == SearchUIIconView:0x123b01d80.centerX   (active)>",
    "<NSLayoutConstraint:0x170688a70 SearchUIAppIconButton:0x123a06e80.centerX == SearchUIIconView:0x123a06820.centerX   (active)>",
    "<NSLayoutConstraint:0x1702872b0 SearchUIAppIconButton:0x123a07a70.centerX == SearchUIIconView:0x123a078a0.centerX   (active)>",
    "<NSLayoutConstraint:0x170288fc0 SearchUIAppIconButton:0x123b029f0.width == 60   (active)>",
    "<NSLayoutConstraint:0x170289330 SearchUIAppIconButton:0x123b029f0.centerX == SearchUIIconView:0x123b02820.centerX   (active)>",
    "<NSLayoutConstraint:0x17049bb20 UILayoutGuide:0x170196c00''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f950 H:[SearchUIAppIconButton:0x123b012b0]-(0)-[UILayoutGuide:0x170196c00'']   (active)>",
    "<NSLayoutConstraint:0x17049f810 SearchUIIconView:0x1271eda50.width == SearchUIIconView:0x123b01d80.width   (active)>",
    "<NSLayoutConstraint:0x170484650 H:[SearchUIIconView:0x1271eda50]-(1)-[SearchUIIconView:0x123b01d80]   (active)>",
    "<NSLayoutConstraint:0x17029f400 H:[UILayoutGuide:0x170196c00'']-(0)-[SearchUIAppIconButton:0x123b01f50]   (active)>",
    "<NSLayoutConstraint:0x170685550 UILayoutGuide:0x1703827d0''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x17049f770 H:[SearchUIAppIconButton:0x123b01f50]-(0)-[UILayoutGuide:0x1703827d0'']   (active)>",
    "<NSLayoutConstraint:0x170284e70 SearchUIIconView:0x123b01d80.width == SearchUIIconView:0x123a06820.width   (active)>",
    "<NSLayoutConstraint:0x170692ed0 H:[SearchUIIconView:0x123b01d80]-(1)-[SearchUIIconView:0x123a06820]   (active)>",
    "<NSLayoutConstraint:0x17028d5c0 H:[UILayoutGuide:0x1703827d0'']-(0)-[SearchUIAppIconButton:0x123a06e80]   (active)>",
    "<NSLayoutConstraint:0x17028d250 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x174689740 H:[SearchUIAppIconButton:0x123a06e80]-(0)-[UILayoutGuide:0x170199300'']   (active)>",
    "<NSLayoutConstraint:0x1746897e0 SearchUIIconView:0x123a06820.width == SearchUIIconView:0x123a078a0.width   (active)>",
    "<NSLayoutConstraint:0x174689ec0 H:[SearchUIIconView:0x123a06820]-(1)-[SearchUIIconView:0x123a078a0]   (active)>",
    "<NSLayoutConstraint:0x17468f960 H:[UILayoutGuide:0x170199300'']-(0)-[SearchUIAppIconButton:0x123a07a70]   (active)>",
    "<NSLayoutConstraint:0x174689bf0 UILayoutGuide:0x1741930b0''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x170292ca0 H:[SearchUIAppIconButton:0x123a07a70]-(0)-[UILayoutGuide:0x1741930b0'']   (active)>",
    "<NSLayoutConstraint:0x170287030 SearchUIIconView:0x123a078a0.width == SearchUIIconView:0x123b02820.width   (active)>",
    "<NSLayoutConstraint:0x17049fc70 H:[SearchUIIconView:0x123a078a0]-(1)-[SearchUIIconView:0x123b02820]   (active)>",
    "<NSLayoutConstraint:0x17049fa90 H:[UILayoutGuide:0x1741930b0'']-(0)-[SearchUIAppIconButton:0x123b029f0]   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170288fc0 SearchUIAppIconButton:0x123b029f0.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17028d250 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17028b950 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x17028d250 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17449c070 SearchUIAppIconButton:0x123b012b0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696440 SearchUIAppIconButton:0x123b012b0.centerX == SearchUIIconView:0x1271eda50.centerX   (active)>",
    "<NSLayoutConstraint:0x1746896f0 SearchUIAppIconButton:0x123b01f50.centerX == SearchUIIconView:0x123b01d80.centerX   (active)>",
    "<NSLayoutConstraint:0x170688a70 SearchUIAppIconButton:0x123a06e80.centerX == SearchUIIconView:0x123a06820.centerX   (active)>",
    "<NSLayoutConstraint:0x1702872b0 SearchUIAppIconButton:0x123a07a70.centerX == SearchUIIconView:0x123a078a0.centerX   (active)>",
    "<NSLayoutConstraint:0x170288fc0 SearchUIAppIconButton:0x123b029f0.width == 60   (active)>",
    "<NSLayoutConstraint:0x170289330 SearchUIAppIconButton:0x123b029f0.centerX == SearchUIIconView:0x123b02820.centerX   (active)>",
    "<NSLayoutConstraint:0x17049bb20 UILayoutGuide:0x170196c00''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f950 H:[SearchUIAppIconButton:0x123b012b0]-(0)-[UILayoutGuide:0x170196c00'']   (active)>",
    "<NSLayoutConstraint:0x17049f810 SearchUIIconView:0x1271eda50.width == SearchUIIconView:0x123b01d80.width   (active)>",
    "<NSLayoutConstraint:0x170484650 H:[SearchUIIconView:0x1271eda50]-(1)-[SearchUIIconView:0x123b01d80]   (active)>",
    "<NSLayoutConstraint:0x17029f400 H:[UILayoutGuide:0x170196c00'']-(0)-[SearchUIAppIconButton:0x123b01f50]   (active)>",
    "<NSLayoutConstraint:0x170685550 UILayoutGuide:0x1703827d0''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f770 H:[SearchUIAppIconButton:0x123b01f50]-(0)-[UILayoutGuide:0x1703827d0'']   (active)>",
    "<NSLayoutConstraint:0x170284e70 SearchUIIconView:0x123b01d80.width == SearchUIIconView:0x123a06820.width   (active)>",
    "<NSLayoutConstraint:0x170692ed0 H:[SearchUIIconView:0x123b01d80]-(1)-[SearchUIIconView:0x123a06820]   (active)>",
    "<NSLayoutConstraint:0x17028d5c0 H:[UILayoutGuide:0x1703827d0'']-(0)-[SearchUIAppIconButton:0x123a06e80]   (active)>",
    "<NSLayoutConstraint:0x174689740 H:[SearchUIAppIconButton:0x123a06e80]-(0)-[UILayoutGuide:0x170199300'']   (active)>",
    "<NSLayoutConstraint:0x1746897e0 SearchUIIconView:0x123a06820.width == SearchUIIconView:0x123a078a0.width   (active)>",
    "<NSLayoutConstraint:0x174689ec0 H:[SearchUIIconView:0x123a06820]-(1)-[SearchUIIconView:0x123a078a0]   (active)>",
    "<NSLayoutConstraint:0x17468f960 H:[UILayoutGuide:0x170199300'']-(0)-[SearchUIAppIconButton:0x123a07a70]   (active)>",
    "<NSLayoutConstraint:0x174689bf0 UILayoutGuide:0x1741930b0''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170292ca0 H:[SearchUIAppIconButton:0x123a07a70]-(0)-[UILayoutGuide:0x1741930b0'']   (active)>",
    "<NSLayoutConstraint:0x170287030 SearchUIIconView:0x123a078a0.width == SearchUIIconView:0x123b02820.width   (active)>",
    "<NSLayoutConstraint:0x17049fc70 H:[SearchUIIconView:0x123a078a0]-(1)-[SearchUIIconView:0x123b02820]   (active)>",
    "<NSLayoutConstraint:0x17049fa90 H:[UILayoutGuide:0x1741930b0'']-(0)-[SearchUIAppIconButton:0x123b029f0]   (active)>",
    "<NSLayoutConstraint:0x17028b950 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170288fc0 SearchUIAppIconButton:0x123b029f0.width == 60   (active)>

Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x170292480 SearchUIAppIconButton:0x121edf800.width == 60   (active)>",
    "<NSLayoutConstraint:0x17028e6a0 SearchUIAppIconButton:0x121edf800.centerX == SearchUIIconView:0x121edf630.centerX   (active)>",
    "<NSLayoutConstraint:0x17049e280 SearchUIAppIconButton:0x123a130a0.centerX == SearchUIIconView:0x1270f7210.centerX   (active)>",
    "<NSLayoutConstraint:0x170683070 SearchUIAppIconButton:0x1270f7c00.width == 60   (active)>",
    "<NSLayoutConstraint:0x170685910 SearchUIAppIconButton:0x1270f7c00.centerX == SearchUIIconView:0x1270f7a30.centerX   (active)>",
    "<NSLayoutConstraint:0x17049efa0 UILayoutGuide:0x170382d80''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f0e0 H:[SearchUIAppIconButton:0x121edf800]-(0)-[UILayoutGuide:0x170382d80'']   (active)>",
    "<NSLayoutConstraint:0x17049f090 SearchUIIconView:0x121edf630.width == SearchUIIconView:0x1270f7210.width   (active)>",
    "<NSLayoutConstraint:0x17049f040 H:[SearchUIIconView:0x121edf630]-(1)-[SearchUIIconView:0x1270f7210]   (active)>",
    "<NSLayoutConstraint:0x170684010 H:[UILayoutGuide:0x170382d80'']-(0)-[SearchUIAppIconButton:0x123a130a0]   (active)>",
    "<NSLayoutConstraint:0x1706972f0 UILayoutGuide:0x17018d750''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x170294910 H:[SearchUIAppIconButton:0x123a130a0]-(0)-[UILayoutGuide:0x17018d750'']   (active)>",
    "<NSLayoutConstraint:0x174696a30 SearchUIIconView:0x1270f7210.width == SearchUIIconView:0x1270f7a30.width   (active)>",
    "<NSLayoutConstraint:0x174696a80 H:[SearchUIIconView:0x1270f7210]-(1)-[SearchUIIconView:0x1270f7a30]   (active)>",
    "<NSLayoutConstraint:0x174696c60 H:[UILayoutGuide:0x17018d750'']-(0)-[SearchUIAppIconButton:0x1270f7c00]   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170683070 SearchUIAppIconButton:0x1270f7c00.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x170292480 SearchUIAppIconButton:0x121edf800.width == 60   (active)>",
    "<NSLayoutConstraint:0x17028e6a0 SearchUIAppIconButton:0x121edf800.centerX == SearchUIIconView:0x121edf630.centerX   (active)>",
    "<NSLayoutConstraint:0x17049ec30 SearchUIAppIconButton:0x123a130a0.width == 60   (active)>",
    "<NSLayoutConstraint:0x17049e280 SearchUIAppIconButton:0x123a130a0.centerX == SearchUIIconView:0x1270f7210.centerX   (active)>",
    "<NSLayoutConstraint:0x174696ee0 SearchUIAppIconButton:0x123b05ed0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696f30 SearchUIAppIconButton:0x123b05ed0.centerX == SearchUIIconView:0x123b05b20.centerX   (active)>",
    "<NSLayoutConstraint:0x170683ac0 SearchUIAppIconButton:0x1270f4850.width == 60   (active)>",
    "<NSLayoutConstraint:0x1702922a0 SearchUIAppIconButton:0x1270f4850.centerX == SearchUIIconView:0x123b091f0.centerX   (active)>",
    "<NSLayoutConstraint:0x17049efa0 UILayoutGuide:0x170382d80''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f0e0 H:[SearchUIAppIconButton:0x121edf800]-(0)-[UILayoutGuide:0x170382d80'']   (active)>",
    "<NSLayoutConstraint:0x17049f090 SearchUIIconView:0x121edf630.width == SearchUIIconView:0x1270f7210.width   (active)>",
    "<NSLayoutConstraint:0x17049f040 H:[SearchUIIconView:0x121edf630]-(1)-[SearchUIIconView:0x1270f7210]   (active)>",
    "<NSLayoutConstraint:0x170684010 H:[UILayoutGuide:0x170382d80'']-(0)-[SearchUIAppIconButton:0x123a130a0]   (active)>",
    "<NSLayoutConstraint:0x174696a30 SearchUIIconView:0x1270f7210.width == SearchUIIconView:0x1270f7a30.width   (active)>",
    "<NSLayoutConstraint:0x174697250 SearchUIIconView:0x1270f7a30.width == SearchUIIconView:0x123b05b20.width   (active)>",
    "<NSLayoutConstraint:0x1702932e0 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x17028ee70 H:[SearchUIAppIconButton:0x123b05ed0]-(0)-[UILayoutGuide:0x1701886e0'']   (active)>",
    "<NSLayoutConstraint:0x17028ccb0 SearchUIIconView:0x123b05b20.width == SearchUIIconView:0x123b091f0.width   (active)>",
    "<NSLayoutConstraint:0x170288250 H:[SearchUIIconView:0x123b05b20]-(1)-[SearchUIIconView:0x123b091f0]   (active)>",
    "<NSLayoutConstraint:0x17028a050 H:[UILayoutGuide:0x1701886e0'']-(0)-[SearchUIAppIconButton:0x1270f4850]   (active)>"
)
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170683ac0 SearchUIAppIconButton:0x1270f4850.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
(
    "<NSLayoutConstraint:0x17049ec30 SearchUIAppIconButton:0x123a130a0.width == 60   (active)>",
    "<NSLayoutConstraint:0x17049e280 SearchUIAppIconButton:0x123a130a0.centerX == SearchUIIconView:0x1270f7210.centerX   (active)>",
    "<NSLayoutConstraint:0x170685910 SearchUIAppIconButton:0x1270f7c00.centerX == SearchUIIconView:0x1270f7a30.centerX   (active)>",
    "<NSLayoutConstraint:0x174696ee0 SearchUIAppIconButton:0x123b05ed0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696f30 SearchUIAppIconButton:0x123b05ed0.centerX == SearchUIIconView:0x123b05b20.centerX   (active)>",
    "<NSLayoutConstraint:0x1706972f0 UILayoutGuide:0x17018d750''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170294910 H:[SearchUIAppIconButton:0x123a130a0]-(0)-[UILayoutGuide:0x17018d750'']   (active)>",
    "<NSLayoutConstraint:0x174696a30 SearchUIIconView:0x1270f7210.width == SearchUIIconView:0x1270f7a30.width   (active)>",
    "<NSLayoutConstraint:0x174696a80 H:[SearchUIIconView:0x1270f7210]-(1)-[SearchUIIconView:0x1270f7a30]   (active)>",
    "<NSLayoutConstraint:0x174696c60 H:[UILayoutGuide:0x17018d750'']-(0)-[SearchUIAppIconButton:0x1270f7c00]   (active)>",
    "<NSLayoutConstraint:0x1746971b0 UILayoutGuide:0x174199f30''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x174697200 H:[SearchUIAppIconButton:0x1270f7c00]-(0)-[UILayoutGuide:0x174199f30'']   (active)>",
    "<NSLayoutConstraint:0x174697250 SearchUIIconView:0x1270f7a30.width == SearchUIIconView:0x123b05b20.width   (active)>",
    "<NSLayoutConstraint:0x1746972a0 H:[SearchUIIconView:0x1270f7a30]-(1)-[SearchUIIconView:0x123b05b20]   (active)>",
    "<NSLayoutConstraint:0x174697480 H:[UILayoutGuide:0x174199f30'']-(0)-[SearchUIAppIconButton:0x123b05ed0]   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x174696ee0 SearchUIAppIconButton:0x123b05ed0.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
(
    "<NSLayoutConstraint:0x17049ec30 SearchUIAppIconButton:0x123a130a0.width == 60   (active)>",
    "<NSLayoutConstraint:0x17049e280 SearchUIAppIconButton:0x123a130a0.centerX == SearchUIIconView:0x1270f7210.centerX   (active)>",
    "<NSLayoutConstraint:0x170685910 SearchUIAppIconButton:0x1270f7c00.centerX == SearchUIIconView:0x1270f7a30.centerX   (active)>",
    "<NSLayoutConstraint:0x174696f30 SearchUIAppIconButton:0x123b05ed0.centerX == SearchUIIconView:0x123b05b20.centerX   (active)>",
    "<NSLayoutConstraint:0x1702922a0 SearchUIAppIconButton:0x1270f4850.centerX == SearchUIIconView:0x123b091f0.centerX   (active)>",
    "<NSLayoutConstraint:0x170289100 SearchUIAppIconButton:0x121ed9d10.width == 60   (active)>",
    "<NSLayoutConstraint:0x170285500 SearchUIAppIconButton:0x121ed9d10.centerX == SearchUIIconView:0x1270f5120.centerX   (active)>",
    "<NSLayoutConstraint:0x1706972f0 UILayoutGuide:0x17018d750''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170294910 H:[SearchUIAppIconButton:0x123a130a0]-(0)-[UILayoutGuide:0x17018d750'']   (active)>",
    "<NSLayoutConstraint:0x174696a30 SearchUIIconView:0x1270f7210.width == SearchUIIconView:0x1270f7a30.width   (active)>",
    "<NSLayoutConstraint:0x174696a80 H:[SearchUIIconView:0x1270f7210]-(1)-[SearchUIIconView:0x1270f7a30]   (active)>",
    "<NSLayoutConstraint:0x174696c60 H:[UILayoutGuide:0x17018d750'']-(0)-[SearchUIAppIconButton:0x1270f7c00]   (active)>",
    "<NSLayoutConstraint:0x1746971b0 UILayoutGuide:0x174199f30''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x174697200 H:[SearchUIAppIconButton:0x1270f7c00]-(0)-[UILayoutGuide:0x174199f30'']   (active)>",
    "<NSLayoutConstraint:0x174697250 SearchUIIconView:0x1270f7a30.width == SearchUIIconView:0x123b05b20.width   (active)>",
    "<NSLayoutConstraint:0x1746972a0 H:[SearchUIIconView:0x1270f7a30]-(1)-[SearchUIIconView:0x123b05b20]   (active)>",
    "<NSLayoutConstraint:0x174697480 H:[UILayoutGuide:0x174199f30'']-(0)-[SearchUIAppIconButton:0x123b05ed0]   (active)>",
    "<NSLayoutConstraint:0x1702932e0 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x17028ee70 H:[SearchUIAppIconButton:0x123b05ed0]-(0)-[UILayoutGuide:0x1701886e0'']   (active)>",
    "<NSLayoutConstraint:0x17028ccb0 SearchUIIconView:0x123b05b20.width == SearchUIIconView:0x123b091f0.width   (active)>",
    "<NSLayoutConstraint:0x170288250 H:[SearchUIIconView:0x123b05b20]-(1)-[SearchUIIconView:0x123b091f0]   (active)>",
    "<NSLayoutConstraint:0x17028a050 H:[UILayoutGuide:0x1701886e0'']-(0)-[SearchUIAppIconButton:0x1270f4850]   (active)>",
    "<NSLayoutConstraint:0x17028f730 UILayoutGuide:0x170188540''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x170290950 H:[SearchUIAppIconButton:0x1270f4850]-(0)-[UILayoutGuide:0x170188540'']   (active)>",
    "<NSLayoutConstraint:0x17028b590 SearchUIIconView:0x123b091f0.width == SearchUIIconView:0x1270f5120.width   (active)>",
    "<NSLayoutConstraint:0x17028eba0 H:[SearchUIIconView:0x123b091f0]-(1)-[SearchUIIconView:0x1270f5120]   (active)>",
    "<NSLayoutConstraint:0x170291440 H:[UILayoutGuide:0x170188540'']-(0)-[SearchUIAppIconButton:0x121ed9d10]   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170289100 SearchUIAppIconButton:0x121ed9d10.width == 60   (active)>

Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
(
    "<NSLayoutConstraint:0x1702932e0 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x174698b00 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x1702932e0 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>

Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17049ec30 SearchUIAppIconButton:0x123a130a0.width == 60   (active)>",
    "<NSLayoutConstraint:0x17049e280 SearchUIAppIconButton:0x123a130a0.centerX == SearchUIIconView:0x1270f7210.centerX   (active)>",
    "<NSLayoutConstraint:0x170685910 SearchUIAppIconButton:0x1270f7c00.centerX == SearchUIIconView:0x1270f7a30.centerX   (active)>",
    "<NSLayoutConstraint:0x174696f30 SearchUIAppIconButton:0x123b05ed0.centerX == SearchUIIconView:0x123b05b20.centerX   (active)>",
    "<NSLayoutConstraint:0x1702922a0 SearchUIAppIconButton:0x1270f4850.centerX == SearchUIIconView:0x123b091f0.centerX   (active)>",
    "<NSLayoutConstraint:0x170289100 SearchUIAppIconButton:0x121ed9d10.width == 60   (active)>",
    "<NSLayoutConstraint:0x170285500 SearchUIAppIconButton:0x121ed9d10.centerX == SearchUIIconView:0x1270f5120.centerX   (active)>",
    "<NSLayoutConstraint:0x1706972f0 UILayoutGuide:0x17018d750''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170294910 H:[SearchUIAppIconButton:0x123a130a0]-(0)-[UILayoutGuide:0x17018d750'']   (active)>",
    "<NSLayoutConstraint:0x174696a30 SearchUIIconView:0x1270f7210.width == SearchUIIconView:0x1270f7a30.width   (active)>",
    "<NSLayoutConstraint:0x174696a80 H:[SearchUIIconView:0x1270f7210]-(1)-[SearchUIIconView:0x1270f7a30]   (active)>",
    "<NSLayoutConstraint:0x174696c60 H:[UILayoutGuide:0x17018d750'']-(0)-[SearchUIAppIconButton:0x1270f7c00]   (active)>",
    "<NSLayoutConstraint:0x1746971b0 UILayoutGuide:0x174199f30''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x174697200 H:[SearchUIAppIconButton:0x1270f7c00]-(0)-[UILayoutGuide:0x174199f30'']   (active)>",
    "<NSLayoutConstraint:0x174697250 SearchUIIconView:0x1270f7a30.width == SearchUIIconView:0x123b05b20.width   (active)>",
    "<NSLayoutConstraint:0x1746972a0 H:[SearchUIIconView:0x1270f7a30]-(1)-[SearchUIIconView:0x123b05b20]   (active)>",
    "<NSLayoutConstraint:0x174697480 H:[UILayoutGuide:0x174199f30'']-(0)-[SearchUIAppIconButton:0x123b05ed0]   (active)>",
    "<NSLayoutConstraint:0x17028ee70 H:[SearchUIAppIconButton:0x123b05ed0]-(0)-[UILayoutGuide:0x1701886e0'']   (active)>",
    "<NSLayoutConstraint:0x17028ccb0 SearchUIIconView:0x123b05b20.width == SearchUIIconView:0x123b091f0.width   (active)>",
    "<NSLayoutConstraint:0x170288250 H:[SearchUIIconView:0x123b05b20]-(1)-[SearchUIIconView:0x123b091f0]   (active)>",
    "<NSLayoutConstraint:0x17028a050 H:[UILayoutGuide:0x1701886e0'']-(0)-[SearchUIAppIconButton:0x1270f4850]   (active)>",
    "<NSLayoutConstraint:0x17028f730 UILayoutGuide:0x170188540''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170290950 H:[SearchUIAppIconButton:0x1270f4850]-(0)-[UILayoutGuide:0x170188540'']   (active)>",
    "<NSLayoutConstraint:0x17028b590 SearchUIIconView:0x123b091f0.width == SearchUIIconView:0x1270f5120.width   (active)>",
    "<NSLayoutConstraint:0x17028eba0 H:[SearchUIIconView:0x123b091f0]-(1)-[SearchUIIconView:0x1270f5120]   (active)>",
    "<NSLayoutConstraint:0x170291440 H:[UILayoutGuide:0x170188540'']-(0)-[SearchUIAppIconButton:0x121ed9d10]   (active)>",
    "<NSLayoutConstraint:0x174698b00 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width   (active)>"

Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x170289100 SearchUIAppIconButton:0x121ed9d10.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone identityservicesd[322] <Notice>: -[IDSDuetInterface _sendMeteringUpdateToDuet] previous: 0 current: 0 delta: 0
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17449c070 SearchUIAppIconButton:0x123b012b0.width == 60   (active)>",
    "<NSLayoutConstraint:0x174696440 SearchUIAppIconButton:0x123b012b0.centerX == SearchUIIconView:0x1271eda50.centerX   (active)>",
    "<NSLayoutConstraint:0x1746896f0 SearchUIAppIconButton:0x123b01f50.centerX == SearchUIIconView:0x123b01d80.centerX   (active)>",
    "<NSLayoutConstraint:0x170688a70 SearchUIAppIconButton:0x123a06e80.centerX == SearchUIIconView:0x123a06820.centerX   (active)>",
    "<NSLayoutConstraint:0x1702872b0 SearchUIAppIconButton:0x123a07a70.centerX == SearchUIIconView:0x123a078a0.centerX   (active)>",
    "<NSLayoutConstraint:0x17028c170 UIImageView:0x123a08340.width == 60   (active)>",
    "<NSLayoutConstraint:0x170289330 SearchUIAppIconButton:0x123b029f0.centerX == SearchUIIconView:0x123b02820.centerX   (active)>",
    "<NSLayoutConstraint:0x17049bb20 UILayoutGuide:0x170196c00''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f950 H:[SearchUIAppIconButton:0x123b012b0]-(0)-[UILayoutGuide:0x170196c00'']   (active)>",
    "<NSLayoutConstraint:0x17049f810 SearchUIIconView:0x1271eda50.width == SearchUIIconView:0x123b01d80.width   (active)>",
    "<NSLayoutConstraint:0x170484650 H:[SearchUIIconView:0x1271eda50]-(1)-[SearchUIIconView:0x123b01d80]   (active)>",
    "<NSLayoutConstraint:0x17029f400 H:[UILayoutGuide:0x170196c00'']-(0)-[SearchUIAppIconButton:0x123b01f50]   (active)>",
    "<NSLayoutConstraint:0x170685550 UILayoutGuide:0x1703827d0''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x17049f770 H:[SearchUIAppIconButton:0x123b01f50]-(0)-[UILayoutGuide:0x1703827d0'']   (active)>",
    "<NSLayoutConstraint:0x170284e70 SearchUIIconView:0x123b01d80.width == SearchUIIconView:0x123a06820.width   (active)>",
    "<NSLayoutConstraint:0x170692ed0 H:[SearchUIIconView:0x123b01d80]-(1)-[SearchUIIconView:0x123a06820]   (active)>",
    "<NSLayoutConstraint:0x17028d5c0 H:[UILayoutGuide:0x1703827d0'']-(0)-[SearchUIAppIconButton:0x123a06e80]   (active)>",
    "<NSLayoutConstraint:0x174689740 H:[SearchUIAppIconButton:0x123a06e80]-(0)-[UILayoutGuide:0x170199300'']   (active)>",
    "<NSLayoutConstraint:0x1746897e0 SearchUIIconView:0x123a06820.width == SearchUIIconView:0x123a078a0.width   (active)>",
    "<NSLayoutConstraint:0x174689ec0 H:[SearchUIIconView:0x123a06820]-(1)-[SearchUIIconView:0x123a078a0]   (active)>",
    "<NSLayoutConstraint:0x17468f960 H:[UILayoutGuide:0x170199300'']-(0)-[SearchUIAppIconButton:0x123a07a70]   (active)>",
    "<NSLayoutConstraint:0x174689bf0 UILayoutGuide:0x1741930b0''.width == UILayoutGuide:0x17418fa40''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170292ca0 H:[SearchUIAppIconButton:0x123a07a70]-(0)-[UILayoutGuide:0x1741930b0'']   (active)>",
    "<NSLayoutConstraint:0x170287030 SearchUIIconView:0x123a078a0.width == SearchUIIconView:0x123b02820.width   (active)>",
    "<NSLayoutConstraint:0x17049fc70 H:[SearchUIIconView:0x123a078a0]-(1)-[SearchUIIconView:0x123b02820]   (active)>",
    "<NSLayoutConstraint:0x17049fa90 H:[UILayoutGuide:0x1741930b0'']-(0)-[SearchUIAppIconButton:0x123b029f0]   (active)>",
    "<NSLayoutConstraint:0x17028b950 UILayoutGuide:0x170199300''.width == UILayoutGuide:0x17418fa40''.width   (active)>",
    "<NSLayoutConstraint:0x170294af0 UIImageView:0x123a08340.width <= SearchUIAppIconButton:0x123b029f0.width   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x17028c170 UIImageView:0x123a08340.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Notice>: ===^^^ didStartSearch:<SFStartSearchFeedback: 0x1002b40a0> (time: 712084726284) -  feedbackID:268435456
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Error>: Unable to simultaneously satisfy constraints.
	Probably at least one of the constraints in the following list is one you don't want. 
	Try this: 
		(1) look at each constraint and try to figure out which you don't expect; 
		(2) find the code that added the unwanted constraint or constraints and fix it. 
    "<NSLayoutConstraint:0x17049ec30 SearchUIAppIconButton:0x123a130a0.width == 60   (active)>",
    "<NSLayoutConstraint:0x17049e280 SearchUIAppIconButton:0x123a130a0.centerX == SearchUIIconView:0x1270f7210.centerX   (active)>",
    "<NSLayoutConstraint:0x170685910 SearchUIAppIconButton:0x1270f7c00.centerX == SearchUIIconView:0x1270f7a30.centerX   (active)>",
    "<NSLayoutConstraint:0x174696f30 SearchUIAppIconButton:0x123b05ed0.centerX == SearchUIIconView:0x123b05b20.centerX   (active)>",
    "<NSLayoutConstraint:0x1702922a0 SearchUIAppIconButton:0x1270f4850.centerX == SearchUIIconView:0x123b091f0.centerX   (active)>",
    "<NSLayoutConstraint:0x17028cb20 UIImageView:0x1270529b0.width == 60   (active)>",
    "<NSLayoutConstraint:0x170285500 SearchUIAppIconButton:0x121ed9d10.centerX == SearchUIIconView:0x1270f5120.centerX   (active)>",
    "<NSLayoutConstraint:0x1706972f0 UILayoutGuide:0x17018d750''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170294910 H:[SearchUIAppIconButton:0x123a130a0]-(0)-[UILayoutGuide:0x17018d750'']   (active)>",
    "<NSLayoutConstraint:0x174696a30 SearchUIIconView:0x1270f7210.width == SearchUIIconView:0x1270f7a30.width   (active)>",
    "<NSLayoutConstraint:0x174696a80 H:[SearchUIIconView:0x1270f7210]-(1)-[SearchUIIconView:0x1270f7a30]   (active)>",
    "<NSLayoutConstraint:0x174696c60 H:[UILayoutGuide:0x17018d750'']-(0)-[SearchUIAppIconButton:0x1270f7c00]   (active)>",
    "<NSLayoutConstraint:0x1746971b0 UILayoutGuide:0x174199f30''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x174697200 H:[SearchUIAppIconButton:0x1270f7c00]-(0)-[UILayoutGuide:0x174199f30'']   (active)>",
    "<NSLayoutConstraint:0x174697250 SearchUIIconView:0x1270f7a30.width == SearchUIIconView:0x123b05b20.width   (active)>",
    "<NSLayoutConstraint:0x1746972a0 H:[SearchUIIconView:0x1270f7a30]-(1)-[SearchUIIconView:0x123b05b20]   (active)>",
    "<NSLayoutConstraint:0x174697480 H:[UILayoutGuide:0x174199f30'']-(0)-[SearchUIAppIconButton:0x123b05ed0]   (active)>",
    "<NSLayoutConstraint:0x17028ee70 H:[SearchUIAppIconButton:0x123b05ed0]-(0)-[UILayoutGuide:0x1701886e0'']   (active)>",
    "<NSLayoutConstraint:0x17028ccb0 SearchUIIconView:0x123b05b20.width == SearchUIIconView:0x123b091f0.width   (active)>",
    "<NSLayoutConstraint:0x170288250 H:[SearchUIIconView:0x123b05b20]-(1)-[SearchUIIconView:0x123b091f0]   (active)>",
    "<NSLayoutConstraint:0x17028a050 H:[UILayoutGuide:0x1701886e0'']-(0)-[SearchUIAppIconButton:0x1270f4850]   (active)>",
    "<NSLayoutConstraint:0x17028f730 UILayoutGuide:0x170188540''.width == UILayoutGuide:0x17019e440''.width + 8   (active)>",
    "<NSLayoutConstraint:0x170290950 H:[SearchUIAppIconButton:0x1270f4850]-(0)-[UILayoutGuide:0x170188540'']   (active)>",
    "<NSLayoutConstraint:0x17028b590 SearchUIIconView:0x123b091f0.width == SearchUIIconView:0x1270f5120.width   (active)>",
    "<NSLayoutConstraint:0x17028eba0 H:[SearchUIIconView:0x123b091f0]-(1)-[SearchUIIconView:0x1270f5120]   (active)>",
    "<NSLayoutConstraint:0x170291440 H:[UILayoutGuide:0x170188540'']-(0)-[SearchUIAppIconButton:0x121ed9d10]   (active)>",
    "<NSLayoutConstraint:0x174698b00 UILayoutGuide:0x1701886e0''.width == UILayoutGuide:0x17019e440''.width   (active)>",
    "<NSLayoutConstraint:0x170295720 UIImageView:0x1270529b0.width <= SearchUIAppIconButton:0x121ed9d10.width   (active)>"
Will attempt to recover by breaking constraint 
<NSLayoutConstraint:0x17028cb20 UIImageView:0x1270529b0.width == 60   (active)>
Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.
The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.
Feb 20 12:42:14 Andrews-iPhone parsecd(GeoServices)[541] <Info>: 63.1 <private>
Feb 20 12:42:14 Andrews-iPhone parsecd(GeoServices)[541] <Info>: 64.1 <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(MobileCoreServices)[6692] <Error>: LaunchServices: failed to find bundle record for com.apple.searchd.zkw.apps {<private> 488}
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(CallKit)[6692] <Notice>: Requesting calls from host
Feb 20 12:42:14 Andrews-iPhone callservicesd(CallKit)[476] <Notice>: Asked to accept new connection from <private>
Feb 20 12:42:14 Andrews-iPhone sharingd[342] <Notice>: SystemUI changed: 0x10 -> 0x90
Feb 20 12:42:14 Andrews-iPhone callservicesd(CallKit)[476] <Notice>: Created <private>
Feb 20 12:42:14 Andrews-iPhone callservicesd(CallKit)[476] <Notice>: callControllerHostConnection: <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(CallKit)[6692] <Notice>: Received requested calls from host: <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(IMAVCore)[6692] <Info>: Starting observation of CT requests
Feb 20 12:42:14 Andrews-iPhone SpringBoard(IMAVCore)[6692] <Info>:  Cleaning up mach bits
Feb 20 12:42:14 Andrews-iPhone SpringBoard(IMAVCore)[6692] <Info>: Connecting to CT for requests
Feb 20 12:42:14 Andrews-iPhone CommCenter[376] <Notice>: #I New CTServerConnection from pid 6692 (conn=0x14bfdaee0)
Feb 20 12:42:14 Andrews-iPhone CommCenter[376] <Notice>: #I CTServerConnection from pid 6692[<private>] is named '<private>'.
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Error>: network_config_has_proxies_configured network_config_has_proxies_configured is deprecated
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Error>: tcp_connection_get_remote API Misuse: Function must be called after tcp_connection_start
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC Enabling TLS [31:0x10046c780]
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Error>: tcp_connection_is_cellular API Misuse: Function must be called after tcp_connection_start
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TCP Conn Start [31:0x10046c780]
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_handler_start [31 api-glb-nyc.smoot.apple.com:443 initial path (null)]
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 initial path (null)] reported event path:start
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 waiting path (satisfied)] reported event path:satisfied
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 waiting path (satisfied)] skipping state update
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 in_progress resolver (satisfied)] reported event resolver:start_dns
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: connect_callback: Adding FD for uid 501
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: DNSServiceCreateConnection START PID[541](parsecd)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: Result code socket 16 created 00000000 00000001
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: DNSServiceGetAddrInfo(4000D000, 0, 3, api-glb-nyc.smoot.apple.com.) START PID[541](parsecd)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: GetServerForQuestion: 0000000101010E40 DNS server (0000000100420920) 216.6.136.140:53 (Penalty Time Left 0) (Scope None:0000000000000000:-1) found for name api-glb-nyc.smoot.apple.com. (AAAA)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: InitDNSConfig: question 0000000101010E40 api-glb-nyc.smoot.apple.com. (AAAA) Timeout 30, DNS Server 216.6.136.140:53
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: ShouldSuppressUnicastQuery: Query suppressed for api-glb-nyc.smoot.apple.com., qtype AAAA, since DNS Configuration does not allow (req_A is true and req_AAAA is false)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: GetServerForQuestion: 0000000101010AC8 DNS server (0000000100420920) 216.6.136.140:53 (Penalty Time Left 0) (Scope None:0000000000000000:-1) found for name api-glb-nyc.smoot.apple.com. (Addr)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: InitDNSConfig: question 0000000101010AC8 api-glb-nyc.smoot.apple.com. (Addr) Timeout 30, DNS Server 216.6.136.140:53
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: ShouldSuppressUnicastQuery: Query not suppressed for api-glb-nyc.smoot.apple.com., qtype Addr, DNSServer . 216.6.136.140:53 allows A queries
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: Result code socket 16 closed  00000000 00000001 (0)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: GenerateNegativeResponse: Generating negative response for question api-glb-nyc.smoot.apple.com. (AAAA)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: queryrecord_result_callback: Suppressed question api-glb-nyc.smoot.apple.com. (AAAA)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: DNSServiceGetAddrInfo(api-glb-nyc.smoot.apple.com., AAAA) ADD    0 api-glb-nyc.smoot.apple.com. AAAA
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: -- Sent UDP DNS Query (flags 0100) RCODE: NoErr (0) RD ID: 26485 33 bytes from port 64881 to 216.6.136.140:53 --
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  1 Questions
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 api-glb-nyc.smoot.apple.com. Addr
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 Answers
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 Authorities
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 Additionals
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: --------------
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: -- Received UDP DNS Response (flags 8180) RCODE: NoErr (0) RD RA ID: 26485 117 bytes from 216.6.136.140:53 to 192.168.8.102:64881 --
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  1 Questions
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 api-glb-nyc.smoot.apple.com. Addr
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  1 Answers
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 TTL     227    4 api-glb-nyc.smoot.apple.com. Addr 17.249.121.246
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  2 Authorities
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 TTL     340   21 smoot.apple.com. NS ns2.smoot.apple.com.
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  1 TTL     340   21 smoot.apple.com. NS ns1.smoot.apple.com.
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  2 Additionals
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  0 TTL     522    4 ns1.smoot.apple.com. Addr 17.253.217.53
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  1 TTL     522    4 ns2.smoot.apple.com. Addr 17.253.217.54
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: --------------
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: mDNSCoreReceiveResponse ignoring   21 smoot.apple.com. NS ns2.smoot.apple.com.
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: mDNSCoreReceiveResponse ignoring   21 smoot.apple.com. NS ns1.smoot.apple.com.
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: mDNSCoreReceiveResponse ignoring    4 ns1.smoot.apple.com. Addr 17.253.217.53
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>: mDNSCoreReceiveResponse ignoring    4 ns2.smoot.apple.com. Addr 17.253.217.54
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: DNSServiceGetAddrInfo(api-glb-nyc.smoot.apple.com., Addr) ADD    4 api-glb-nyc.smoot.apple.com. Addr 17.249.121.246
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_resolver_update [31 api-glb-nyc.smoot.apple.com:443 in_progress resolver (satisfied)] Adding endpoint handler for 17.249.121.246:443
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 in_progress resolver (satisfied)] reported event resolver:receive_dns
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_resolver_start_next_child [31 api-glb-nyc.smoot.apple.com:443 in_progress resolver (satisfied)] starting child endpoint 17.249.121.246:443
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_resolver_start_next_child [31 api-glb-nyc.smoot.apple.com:443 in_progress resolver (satisfied)] starting next child endpoint in 100ms
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_handler_start [31.1 17.249.121.246:443 initial path (null)]
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 initial path (null)] reported event path:start
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 waiting path (satisfied)] reported event path:satisfied
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 in_progress socket-flow (satisfied)] reported event flow:start_connect
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_flow_protocol_connected [31.1 17.249.121.246:443 in_progress socket-flow (satisfied)] TFO started, need initial data
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 in_progress socket-flow (satisfied)] reported event flow:requires_initial_data
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: DNSServiceCreateConnection STOP PID[541](parsecd)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: DNSServiceGetAddrInfo(api-glb-nyc.smoot.apple.com.) STOP PID[541](parsecd)
Feb 20 12:42:14 Andrews-iPhone mDNSResponder[521] <Info>:  15: Removing FD
Feb 20 12:42:14 Andrews-iPhone backboardd(libsystem_trace.dylib)[6690] <Notice>: subsystem: com.apple.BackBoardServices.fence, category: Arbiter, enable_level: 1, persist_level: 0, default_ttl: 0, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 0, privacy_setting: 0, enable_private_data: 0
Feb 20 12:42:14 Andrews-iPhone backboardd(libsystem_trace.dylib)[6690] <Notice>: subsystem: com.apple.BackBoardServices.fence, category: Observer, enable_level: 1, persist_level: 0, default_ttl: 0, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 0, privacy_setting: 0, enable_private_data: 0
Feb 20 12:42:14 Andrews-iPhone SpringBoard(libsystem_trace.dylib)[6692] <Notice>: subsystem: com.apple.BackBoardServices.fence, category: Observer, enable_level: 1, persist_level: 0, default_ttl: 0, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 0, privacy_setting: 0, enable_private_data: 0
Feb 20 12:42:14 Andrews-iPhone SpringBoard(libsystem_trace.dylib)[6692] <Notice>: subsystem: com.apple.BackBoardServices.fence, category: Trace, enable_level: 1, persist_level: 0, default_ttl: 0, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 0, privacy_setting: 0, enable_private_data: 0
Feb 20 12:42:14 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard (com.apple.springboard < com.apple.springboard)
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_flow_protocol_connected [31.1 17.249.121.246:443 in_progress socket-flow (satisfied)] Transport protocol connected
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Notice>: activate generator <_UIFeedbackKeyboardBehavior: 0x170306ff0: prepared=1> with style: TurnOn; activationCount: 1 -> 0; styleActivationCount: 1 -> 0
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Notice>: feedback engine <_UIFeedbackSystemSoundEngine: 0x1740ae040: state=0, numberOfClients=1, prewarmCount=0, _isSuspended=0> state changed: Inactive -> Activating
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Notice>: feedback engine <_UIFeedbackSystemSoundEngine: 0x1740ae040: state=3, numberOfClients=1, prewarmCount=0, _isSuspended=0> state changed: Activating -> Running
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 1119: clientPID 6692(SpringBoard), ssid 1104, audio data size 0, audio file path /System/Library/Audio/UISounds/key_press_click.caf, customVibeDataProvided 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 269: mAudioToken /System/Library/Audio/UISounds/key_press_click.caf, mInUseCount 1
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 198: AudioFileReadPackets:result 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 285: mAudioToken /System/Library/Audio/UISounds/key_press_click.caf, mInUseCount 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 1331: clientPID 6692(SpringBoard), flag 1, ssid 1104
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 228: Client request to get virtual format ([ 32/44100/1; flags: 0x29; bpp: 4; fpp: 1; Bpf: 4 ]) on virtual audio stream 403.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 228: Client request to get virtual format ([ 32/44100/1; flags: 0x29; bpp: 4; fpp: 1; Bpf: 4 ]) on virtual audio stream 403.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 1880: Client request to set nominal sample rate to 44100.000000 on VAD 371.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 678: Client request to start IO proc ID 0x0 on VAD 371.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 1441: Chain Description: Chain Name:n61_speaker_general
Before processing reformatting: unneeded
DSPChain items:
    0: DSPProcessorType nbeq
    1: DSPProcessorType mdp2
    2: DSPProcessorType vrq2
    3: DSPProcessorType nbeq
    4: DSPProcessorType mdp2
    5: DSPProcessorType nbeq
    6: DSPProcessorType sfcl
    7: DSPProcessorType spp3
    8: DSPProcessorType sfcl
After processing reformatting: unneeded
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 2456: stream capture flags : 000000 (sus|anc|tel|sec|pri|hal)
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 560: Starting IO type 1 on AggregateDevice 398.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(CoreAudio)[284] <Notice>: HALS_IOContext.cpp:766:StartIOProcID:  HALS_IOContext::StartIOProcID: 402 Speaker (VAD [vdef] AggDev 5):
Feb 20 12:42:14 Andrews-iPhone mediaserverd(CoreAudio)[284] <Notice>: HALS_IOContext.cpp:772:StartIOProcID:  				starting ProcID 0x0 state: Prewarm: 0 Play: 0 State: Stopped IOProc 0x21: no
Feb 20 12:42:14 Andrews-iPhone CommCenter[376] <Notice>: #I Device not camped on GSM.
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 in_progress socket-flow (satisfied)] reported event flow:finish_transport
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TLS Event [31:0x10046c780]: 2, Pending(0)
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TLS Event [31:0x10046c780]: 20, Pending(0)
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_flow_protocol_connected [31.1 17.249.121.246:443 in_progress socket-flow (satisfied)] Output protocol connected
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_endpoint_flow_connected_path_change [31.1 17.249.121.246:443 ready socket-flow (satisfied)] Connected path is satisfied
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 ready socket-flow (satisfied)] reported event flow:finish_connect
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 ready resolver (satisfied)] reported event flow:finish_connect
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31.1 17.249.121.246:443 ready socket-flow (satisfied)] reported event flow:changed_viability
Feb 20 12:42:14 Andrews-iPhone parsecd(libsystem_network.dylib)[541] <Info>: nw_connection_endpoint_report [31 api-glb-nyc.smoot.apple.com:443 ready resolver (satisfied)] reported event flow:changed_viability
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TCP Conn Event [31:0x10046c780]: 1 Err(0)
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TCP Conn Connected [31:0x10046c780]: Err(0)
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TCP Conn Event [31:0x10046c780]: 8 Err(0)
Feb 20 12:42:14 Andrews-iPhone parsecd(CFNetwork)[541] <Notice>: TIC TLS Handshake Complete [31:0x10046c780]
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:14 Andrews-iPhone parsecd[541] <Info>: Status for warm request: (200) error: ((null))
Feb 20 12:42:14 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(libsystem_trace.dylib)[6692] <Notice>: subsystem: com.apple.SpringBoard, category: SystemGesture, enable_level: 1, persist_level: 0, default_ttl: 0, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 0, privacy_setting: 0, enable_private_data: 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(CoreMedia)[284] <Notice>: -CMSystSounds- cmsmActivateSystemSounds: CMSession: Starting NULL IO for SSID 1104 and PID 6692. Prewarming audio.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 1119: clientPID 6692(SpringBoard), ssid 1155, audio data size 0, audio file path /System/Library/Audio/UISounds/key_press_delete.caf, customVibeDataProvided 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 269: mAudioToken /System/Library/Audio/UISounds/key_press_delete.caf, mInUseCount 1
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 198: AudioFileReadPackets:result 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 285: mAudioToken /System/Library/Audio/UISounds/key_press_delete.caf, mInUseCount 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 1331: clientPID 6692(SpringBoard), flag 1, ssid 1155
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 228: Client request to get virtual format ([ 32/44100/1; flags: 0x29; bpp: 4; fpp: 1; Bpf: 4 ]) on virtual audio stream 403.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 228: Client request to get virtual format ([ 32/44100/1; flags: 0x29; bpp: 4; fpp: 1; Bpf: 4 ]) on virtual audio stream 403.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 1880: Client request to set nominal sample rate to 44100.000000 on VAD 371.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 1119: clientPID 6692(SpringBoard), ssid 1156, audio data size 0, audio file path /System/Library/Audio/UISounds/key_press_modifier.caf, customVibeDataProvided 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 269: mAudioToken /System/Library/Audio/UISounds/key_press_modifier.caf, mInUseCount 1
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 198: AudioFileReadPackets:result 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Info>: 285: mAudioToken /System/Library/Audio/UISounds/key_press_modifier.caf, mInUseCount 0
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 1331: clientPID 6692(SpringBoard), flag 1, ssid 1156
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 228: Client request to get virtual format ([ 32/44100/1; flags: 0x29; bpp: 4; fpp: 1; Bpf: 4 ]) on virtual audio stream 403.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Info>: 228: Client request to get virtual format ([ 32/44100/1; flags: 0x29; bpp: 4; fpp: 1; Bpf: 4 ]) on virtual audio stream 403.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 1880: Client request to set nominal sample rate to 44100.000000 on VAD 371.
Feb 20 12:42:14 Andrews-iPhone kbd(KeyboardServices)[562] <Info>: -[_KSTextReplacementManager shouldMigrateToCloudKit]  Should allow migration to cloudkit: 0
Feb 20 12:42:14 Andrews-iPhone kbd(KeyboardServices)[562] <Info>: __62-[_KSCloudKitManager queryAccountStatusWithCompletionHandler:]_block_invoke  >>> checking account status
Feb 20 12:42:14 Andrews-iPhone kbd(KeyboardServices)[562] <Info>: -[_KSTextReplacementManager initWithDirectoryPath:forceMigration:forceCloudKitSync:]  >>> using legacy store
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:14 Andrews-iPhone cloudd(CloudKitDaemon)[595] <Info>: Checking TCC authorization for with 1 proxy.
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:14 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:14 Andrews-iPhone kbd(KeyboardServices)[562] <Info>: __62-[_KSCloudKitManager queryAccountStatusWithCompletionHandler:]_block_invoke_3  >>> account is set up
Feb 20 12:42:14 Andrews-iPhone kbd(KeyboardServices)[562] <Info>: -[_KSCloudKitManager setupSubscription]  already subsribed for zone change
Feb 20 12:42:14 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard (com.apple.springboard < com.apple.springboard)
Feb 20 12:42:14 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard (com.apple.springboard < com.apple.springboard)
Feb 20 12:42:14 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client '/System/Library/PrivateFrameworks/CoreParsec.framework'
Feb 20 12:42:14 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Notice>: deactivate generator <_UIFeedbackKeyboardBehavior: 0x170306ff0: prepared=0> with style: TurnOn; activationCount: 0 -> 1; styleActivationCount: 0 -> 1
Feb 20 12:42:14 Andrews-iPhone SpringBoard(UIKit)[6692] <Notice>: feedback engine <_UIFeedbackSystemSoundEngine: 0x1740ae040: state=4, numberOfClients=0, prewarmCount=0, _isSuspended=0> state changed: Running -> Inactive
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 1331: clientPID 6692(SpringBoard), flag 0, ssid 1104
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 751: Client request to stop IO proc ID 0x0 on VAD 371.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(VirtualAudio)[284] <Notice>: 717: Stopping IO type 1 on AggregateDevice 398.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(CoreAudio)[284] <Notice>: HALS_IOContext.cpp:855:StopIOProcID:  HALS_IOContext::StopIOProcID: 402 Speaker (VAD [vdef] AggDev 5):
Feb 20 12:42:14 Andrews-iPhone mediaserverd(CoreAudio)[284] <Notice>: HALS_IOContext.cpp:861:StopIOProcID:  HALS_IOContext::StopIOProcID: stopping 0x0 state: Prewarm: 1 Play: 0 State: Prewarmed IOProc 0x21: no
Feb 20 12:42:14 Andrews-iPhone mediaserverd(CoreMedia)[284] <Notice>: -CMSystSounds- cmsmActivateSystemSounds: CMSession: Stopping NULL IO for SSID 1104 and PID 6692. UN-Prewarming audio.
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 1331: clientPID 6692(SpringBoard), flag 0, ssid 1155
Feb 20 12:42:14 Andrews-iPhone mediaserverd(AudioToolbox)[284] <Notice>: 1331: clientPID 6692(SpringBoard), flag 0, ssid 1156
Feb 20 12:42:14 Andrews-iPhone CommCenter[376] <Notice>: #I Device not camped on GSM.
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:15 Andrews-iPhone SpringBoard[6692] <Notice>: Disabling global orientation lock override for reason: SBLockOrientationForSpotlight
Feb 20 12:42:15 Andrews-iPhone SpringBoard[6692] <Notice>: SB orientation locked: NO; user lock: NO, overrides: NO
Feb 20 12:42:15 Andrews-iPhone SpringBoard[6692] <Notice>: SB orientation locked: NO; user lock: NO, overrides: NO
Feb 20 12:42:15 Andrews-iPhone SpringBoard[6692] <Notice>: SB orientation locked: NO; user lock: NO, overrides: NO
Feb 20 12:42:15 Andrews-iPhone SpringBoard[6692] <Notice>: SB orientation lock change handler fired! is locked: NO; performed update: YES
Feb 20 12:42:15 Andrews-iPhone backboardd[6690] <Info>: client com.apple.springboard - (6692) updated deferrals to {(
    <BKSEventFocusDeferral: 0x100341ef0; <BKSEventFocusDeferralProperties: 0x1003f7b10; <com.apple.springboard - 6692, (null), 0x0> --> <BKSEventFocusDeferralProperties: 0x10690e550; <com.apple.springboard - 6692, (null), 0x78310126>; Priority: 0
)}
Feb 20 12:42:15 Andrews-iPhone backboardd[6690] <Notice>: Unlocking device orientation for lock type: 3
Feb 20 12:42:15 Andrews-iPhone backboardd(CoreMotion)[6690] <Info>: Received deviceOrientationBlocking
Feb 20 12:42:15 Andrews-iPhone backboardd(CoreMotion)[6690] <Notice>: Got latest sample: 0 @ -1.000000
Feb 20 12:42:15 Andrews-iPhone backboardd[6690] <Notice>: Effective device orientation changed to: unknown
Feb 20 12:42:15 Andrews-iPhone sharingd[342] <Notice>: SystemUI changed: 0x90 -> 0x10
Feb 20 12:42:15 Andrews-iPhone searchd[677] <Info>: <private> Background kSPMessageSendSFFeedback <private>
Feb 20 12:42:15 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client 'com.apple.HealthKit'
Feb 20 12:42:15 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client 'com.apple.HealthKit'
Feb 20 12:42:15 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client 'com.apple.HealthKit'
Feb 20 12:42:15 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard (com.apple.springboard < com.apple.springboard)
Feb 20 12:42:15 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:15 Andrews-iPhone CommCenter[376] <Notice>: #watchdog #I Callback Watchdog: checkin 1881
Feb 20 12:42:15 Andrews-iPhone CommCenter[376] <Notice>: #watchdog #I Server Watchdog: checkin 1881
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:15 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:15 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:16 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:16 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:16 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:17 Andrews-iPhone locationd[346] <Notice>: {"msg":"adapter details", "adaperDescription":"usb host", "batteryChargerType":"kChargerTypeUsb"}
Feb 20 12:42:17 Andrews-iPhone locationd[346] <Notice>: {"msg":"battery capacity info", "batteryStatus":"<private>", "":"", "currentCapacity":"", "maximumCapacity":"510", "batteryIsDifferent":"-36"}
Feb 20 12:42:17 Andrews-iPhone locationd[346] <Info>: Fence: Got kNotificationBattery, level, <private>, charged, <private>, connected, <private>, wasConnected, <private>
Feb 20 12:42:17 Andrews-iPhone coreduetd[5766] <Notice>: CDDBatteryMonitor:	received batterycallback, currentPercentage:34.000000!
Feb 20 12:42:17 Andrews-iPhone coreduetd[5766] <Notice>: CDDBatteryMonitor:	Notifying battery change for BON calculation!
Feb 20 12:42:17 Andrews-iPhone powerd[298] <Notice>: Battery capacity change posted with value 0xb0022
Feb 20 12:42:17 Andrews-iPhone powerd[298] <Notice>: Battery time remaining posted. Capacity:0x22
Feb 20 12:42:17 Andrews-iPhone SpringBoard(BatteryCenter)[6692] <Notice>: Power sources changed
Feb 20 12:42:17 Andrews-iPhone SpringBoard(BatteryCenter)[6692] <Notice>: Query power sources
Feb 20 12:42:17 Andrews-iPhone SpringBoard(BatteryCenter)[6692] <Notice>: Got a list of 1 sources
Feb 20 12:42:17 Andrews-iPhone SpringBoard(BatteryCenter)[6692] <Notice>: Found 1 power sources
Feb 20 12:42:17 Andrews-iPhone SpringBoard(BatteryCenter)[6692] <Notice>: Found power source: {
    "Battery Provides Time Remaining" = 1;
    BatteryHealth = Good;
    Current = 2100;
    "Current Capacity" = 34;
    DesignCycleCount = 300;
    "Is Charging" = 1;
    "Is Finishing Charge" = 0;
    "Is Present" = 1;
    "Max Capacity" = 100;
    Name = "InternalBattery-0";
    "Power Source ID" = 19529827;
    "Power Source State" = "AC Power";
    "Raw External Connected" = 1;
    "Show Charging UI" = 1;
    "Time to Empty" = 0;
    "Time to Full Charge" = 0;
    "Transport Type" = Internal;
    Type = InternalBattery;
Feb 20 12:42:17 Andrews-iPhone SpringBoard(BatteryCenter)[6692] <Notice>: Found device: <BCBatteryDevice: 0x1744e3780; vendor = Apple; productIdentifier = 0; parts = (null); identifier = 19529827; matchIdentifier = (null); baseIdentifier = InternalBattery-0; name = iPhone; groupName =InternalBattery-0; percentCharge = 34; lowBattery = NO; connected = YES; charging = YES; internal = YES; powerSource = YES; poweredSoureState = AC Power; transportType = 1 >
Feb 20 12:42:17 Andrews-iPhone coreduetd[5766] <Notice>: BatteryConditionChange: device:0, batteryLevel:34, isConnectedToCharger:1
Feb 20 12:42:17 Andrews-iPhone coreduetd[5766] <Notice>: No change in Local BON: 100.
Feb 20 12:42:17 Andrews-iPhone coreduetd[5766] <Info>: monitor: batteryPercentage=34%
Feb 20 12:42:17 Andrews-iPhone securityd[447] <Notice>: cert[0]: NonEmptySubject =(leaf)[]> 0
Feb 20 12:42:17 Andrews-iPhone securityd[447] <Notice>: cert[0]: AnchorTrusted =(leaf)[force]> 0
Feb 20 12:42:17 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: Trigger: <private> is now [34]
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:17 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:17 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:18 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:18 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:18 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: Attempting to suspend based on triggers: <private>
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: Evaluating 105 activities based on triggers
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: <private>:[
<private> ] sumScores:25.531996, denominator:26.030000, FinalDecision: Must Not Proceed FinalScore: 0.000000}
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: <private>:[
<private> ] sumScores:25.531996, denominator:26.030000, FinalDecision: Must Not Proceed FinalScore: 0.000000}
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: <private>:[
<private> ] sumScores:25.531996, denominator:26.030000, FinalDecision: Must Not Proceed FinalScore: 0.000000}
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: <private>:[
<private> ] sumScores:25.531996, denominator:26.030000, FinalDecision: Must Not Proceed FinalScore: 0.000000}
Feb 20 12:42:19 Andrews-iPhone DuetHeuristic-BM(DuetActivitySchedulerDaemon)[512] <Notice>: <private>:[
<private> ] sumScores:25.531996, denominator:26.030000, FinalDecision: Must Not Proceed FinalScore: 0.000000}
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:19 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:19 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:19 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:20 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:20 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Info>: dominant motion activity change from, <private>, to, <private>
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Info>: Processing realtime <private>: <private>
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: Object, <private>, active transactions, 1
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: total active transactions, 1
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: begin transaction
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:20 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Info>: Dropping notification of predicted applications because there are no predicted applications.
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: total active transactions, 0
Feb 20 12:42:20 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: end transaction
Feb 20 12:42:21 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:21 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:21 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:22 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:22 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:22 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:23 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:23 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:23 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client '/System/Library/LocationBundles/RemindersAlerts.bundle'
Feb 20 12:42:24 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:24 Andrews-iPhone locationd[346] <Notice>: message 'kCLConnectionMessageWatchdog' received from client '/System/Library/LocationBundles/CalendarLocation.bundle'
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:24 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:24 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::setDeviceMotionUpdateInterval changing update interval to: <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: CLDeviceMotion::minimumUpdateIntervalChanged,notification,<private>,minimumUpdateInterval,<private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: IOHIDServiceClientSetProperty() successfully set property for event <private>
Feb 20 12:42:24 Andrews-iPhone SpringBoard(CoreMotion)[6692] <Info>: Property for usage pair {<private>,<private>}: {<private> = <private>} was set <private>
Feb 20 12:42:25 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:25 Andrews-iPhone iaptransportd[364] <Notice>: CIapPortAppleIDBus: Auth timer timeout completed on pAIDBPort:d0, portID:01 downstream port
Feb 20 12:42:25 Andrews-iPhone kernel(IOAccessoryManager)[0] <Notice>: IOAccessoryManager::configureAllowedFeatures: tristar: revoking mask=0xffff
Feb 20 12:42:25 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:25 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:25 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: caching CMMotionActivity, <private>, RTMotionActivity, <private>
Feb 20 12:42:26 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:26 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:26 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:27 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:27 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:27 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:28 Andrews-iPhone routined(libcoreroutine.dylib)[290] <Debug>: caching CMMotionActivity, <private>, RTMotionActivity, <private>
Feb 20 12:42:28 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:28 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:28 Andrews-iPhone SpringBoard(KeyboardArbiter)[6692] <Info>: HW kbd: currently com.apple.springboard ((null) < com.apple.springboard)
Feb 20 12:42:29 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd4 0x02 0x0b 0x00
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd4, 0x2, 0xb, 00}
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:29 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:30 Andrews-iPhone locationd[346] <Info>: Notifying clients on temperature update,temperature,<private>
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: txBufferLength=7 rxBufferLength=23
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Wrote:     7B | 0x80 0x10 0x00 0x07 0x00 0x00 0x00
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>:  Read:    23B | 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x20 0x00 0x10 0x00 0x00 0x00 0x11 0x01 0x01 0x00 0x04 0xd5 0x02 0x0c 0x00
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: Status={0x80, 0x20, 00, 0x10, 00, 00, 00, 0x11, 0x1, 0x1, 00, 0x4, 0xd5, 0x2, 0xc, 00}
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit, err=0x0
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: mask=0xFF, bad=false
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: entry
Feb 20 12:42:30 Andrews-iPhone kernel(AppleBiometricSensor)[0] <Debug>: exit
